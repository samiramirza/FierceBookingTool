@model Fierce.Models.AdminModel
@{
    ViewBag.Title = "ViewOrders";
}
<style>
    .fulliteration {
        float: none;
    }

    .iteration {
        text-align: center;
    }

    .addbtn {
        padding: 3px 25px;
        float: left;
        margin-bottom: 20px;
        margin-left: 110px;
    }
    .txt {
        height:31px;
    }
    .labelsearch {
        width:100px;
    }
      .excelbtn {
        float: right;  
        margin-right: 20px;
        margin-top: 20px;
       
    }
    #ManageOrder {
        float: right;margin-right:0px;padding:8px;
    }
</style>
  @*<script src="~/Scripts/tablesorter.js"></script>*@
@using (Html.BeginForm("ViewOrders", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
     @Html.HiddenFor(m => m.ClickType, new { id = "hdnType" })
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 outerdiv">
        <div class="col-lg-12  margin-top">

            <input type="button" value="Manage Book Module" class="btn custombutton addbtn " id="ManageOrder" style="">
            <div class="col-lg-12 mainGrid">
                <div class="search_text">
                    Search By
                </div>
                <div class="col-xs-11">
                  
                      
                        <div class="col-xs-6" ><label class="labelsearch">Date From</label>@Html.TextBoxFor(m => m.dateFrom, new { Class = "txt", style="width:170px;"  })
                             <span class="field-validation-error" id="errDateFrom" style="position:relative;width: 200px;clear: both;font-size:12px;"></span>
                        </div>
                        
                        <div class="col-xs-6" ><label  class="labelsearch">Date To</label>@Html.TextBoxFor(m => m.dateTo, new { Class = "txt",style="width:170px;"  })
                             <span class="field-validation-error" id="errDateTo" style="position:relative;width: 200px;clear: both;font-size:12px;"></span>
                        </div>
                    
                </div>
                <div class="col-xs-11" style="margin-top:15px;">
                   
                        
                        <div class="col-xs-6" ><label  class="labelsearch" style="width:97px;">Username</label>
                            @Html.TextBoxFor(m => m.userName, new { Class = "txt" })
                        </div>
                       
                        <div class="col-xs-6" ><label  class="labelsearch">Order ID</label>@Html.TextBoxFor(m => m.DRorderID, new { Class = "txt number"})</div>
                   </div>
               
                 <div class="col-xs-11" style="margin:15px;">
                    <input id="find" class="btn custombutton " type="button" value="Find">
                </div>
            </div>
        </div>
         <div>
             <input id="export" class="btn custombutton excelbtn" type="button" value="Export To Excel">
        </div>
        <div class="col-lg-12">
            <table class="col-lg-12 col-md-12 col-sm-12 col-xs-12 mainGrid table_1 tickets_table margin-top">
                <thead>
                   
                        <tr class="fulliteration">
                            <th class="iteration email_break">Username</th>
                            <th class="iteration email_break">Order No</th>
                            <th class="iteration email_break">Order Date</th>
                            <th class="iteration email_break">Details</th>

                        </tr>
                   
                </thead>
                <tbody>
                    @if (Model.lstOrders != null && Model.lstOrders.Count() > 0)
                    {
                        foreach (var i in Model.lstOrders.OrderByDescending(x=>x.OrderDate))
                        {
                        <tr class="fulliteration">
                            <td class="iterationchk email_break">@i.UserName</td>
                            <td class="iteration email_braek">@i.OrderId</td>
                            <td class="iteration email_break"> @i.OrderDate.ToShortDateString()</td>
                            <td class="iteration email_break">@Html.ActionLink("View Details","ViewDetail",new { data=i.OrderId }, htmlAttributes: new { @class="OrderDetails"})</td>
                        </tr>
                        }
                    }
                    else
                    {
                        <tr class="fulliteration"><td class="iterationchk" colspan="4">No orders available.</td> </tr>
                    }
                </tbody>
            </table>
             @if (Model.TotalPages > 1)
    {
<table style="float:right;margin-right:20px;">
    <tr>
    <td>&nbsp;</td>
    <td><a href="#" id="previouspage"><<<</a></td>
    <td>   
        Page @Model.Page of @Model.TotalPages
    </td>
    <td><a href="#" id="nextpage">>>></a></td>
    <td>&nbsp;</td>
    </tr>
</table>
    }
@Html.HiddenFor(m => m.Page)
@Html.HiddenFor(m=>m.TotalPages)
            @Html.Hidden("FindFlag")
        </div>
       @* href="#orderDetails_modal" data-toggle="modal"*@

       
    </div>
}
<script type="text/javascript">
    function getParameterByName(name) {
        name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
        var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
            results = regex.exec(location.search);
        return results == null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
    }

    $("#previouspage").click(function () {
        var url = window.location.pathname;
        var index = 0;
        var currentpage = $("#Page").val();
        var seg = getParameterByName('seg');
        var stat = getParameterByName('stat');
        var dateto = $("#dateTo").val();
        var datefrom = $("#dateFrom").val();
        var username = $("#userName").val();
        var orderid = $("#DRorderID").val();
        var flag = $("#FindFlag").val();
        var qstring;
        index = url.indexOf('?Page');
        if (index != -1) {
            url = url.substring(0, index);
        }
        if (parseInt(currentpage) > 1)
            qstring = '?Page=' + (parseInt(currentpage) - 1);
        else
            qstring = '?Page=' + (parseInt(currentpage));

        if (seg != '') {
            qstring += '&seg=' + seg;
        }
        if (stat != '') {
            qstring += '&stat=' + stat;
        }
        if (dateto != '') {
            qstring += '&dateto=' + dateto;
        }
        if (datefrom != '') {
            qstring += '&datefrom=' + datefrom;
        }
        if (username != '') {
            qstring += '&username=' + username;
        }
        if (orderid != '') {
            qstring += '&orderid=' + orderid;
        }
        if (flag != '') {
            qstring += '&flag=' + flag;
        }
        window.location.href = url + qstring;
    });
    $("#nextpage").click(function () {
        var url = window.location.pathname;
        var index = 0;
        var currentpage = $("#Page").val();
        var totalpage = $("#TotalPages").val();
        var seg = getParameterByName('seg');
        var stat = getParameterByName('stat');
        var dateto = $("#dateTo").val();
        var datefrom =  $("#dateFrom").val();
        var username =  $("#userName").val();
        var orderid = $("#DRorderID").val();
        var flag = $("#FindFlag").val();
        var qstring;
        index = url.indexOf('?Page');
        if (index != -1) {
            url = url.substring(0, index);
        }
        if (parseInt(currentpage) < parseInt(totalpage))
            qstring = '?Page=' + (parseInt(currentpage) + 1);
        else
            qstring = '?Page=' + (parseInt(currentpage));
        if (seg != '') {
            qstring += '&seg=' + seg;
        }
        if (stat != '') {
            qstring += '&stat=' + stat;
        }
        if (dateto != '') {
            qstring += '&dateto=' + dateto;
        }
        if (datefrom != '') {
            qstring += '&datefrom=' + datefrom;
        }
        if (username != '') {
            qstring += '&username=' + username;
        }
        if (orderid != '') {
            qstring += '&orderid=' + orderid;
        }
        if (flag != '') {
            qstring += '&flag=' + flag;
        }
        window.location.href = url + qstring;
    });
    // add parser through the tablesorter addParser method
    //$.tablesorter.addParser({
    //    // set a unique id         
    //    id: 'dates',
    //    is: function (s) {
    //        // return false so this parser is not auto detected             
    //        return false;
    //    },
    //    format: function (s) {
    //        var date = s;
    //        if (s.indexOf(" ") > 0) {
    //            // sort by first date of the pair
    //            date = s.substring(0, s.indexOf(" "));
    //            date = Date.parse(date);
    //        }
    //        return date;
    //    },
    //    // set type, either numeric or text         
    //    type: 'date'
    //});
    $(document).ready(function () {

        $('#ManageOrder').on("click", function () {
            window.location.href = '@Url.Action("Index", "Admin")';
        });

        if ('@ViewBag.error' == "true") {

            alert("No orders available");
        }
        $(".number").keydown(function (event) {
            // Allow: backspace, delete, tab, escape, and enter
            if (event.keyCode == 46 || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 27 || event.keyCode == 13 ||
                // Allow: Ctrl+A
                (event.keyCode == 65 && event.ctrlKey === true) ||
                // Allow: home, end, left, right
                (event.keyCode >= 35 && event.keyCode <= 39)) {
                // let it happen, don't do anything
                return;
            }
            else {
                // Ensure that it is a number and stop the keypress
                if (event.shiftKey || (event.keyCode < 48 || event.keyCode > 57) && (event.keyCode < 96 || event.keyCode > 105)) {
                    event.preventDefault();
                }
            }
        });


       
        $("#dateFrom").val('@Model.StartRange');
        $("#dateTo").val('@Model.EndRange');

        $("#dateFrom").attr("readonly", "readonly");
        $("#dateTo").attr("readonly", "readonly");
        $("#dateFrom").datepicker({
            changeMonth: true,
            changeYear: true,
            showOn: "button",
            buttonImage: "/Images/Calendar-Icon.png",
            buttonImageOnly: true,

           
        });
        $("#dateTo").datepicker({
            changeMonth: true,
            changeYear: true,
            showOn: "button",
            buttonImage: "/Images/Calendar-Icon.png",
            buttonImageOnly: true,

        });
        $('.headingcover').find('p').text("Order Details");

        var flag = true;

        $('#find').click(function () {
            $("#FindFlag").val(true);
            var flag = true;
            var startDate = $("#dateFrom").val();
            var endDate = $("#dateTo").val();
         
            if (startDate != "" && endDate == "") {
                $('#errDateTo').show().html('Required');
                $('#errDateFrom').hide();
                flag = false;
            }
            else if (startDate == "" && endDate != "") {
                $('#errDateFrom').show().html('Required');
                $('#errDateTo').hide();
                flag = false;
            }
            else if (startDate != "" && endDate != "") {
              
                if ($.datepicker.parseDate('mm/dd/yy', $('#dateTo').val()) < $.datepicker.parseDate('mm/dd/yy', $('#dateFrom').val())) {
                    $('#errDateFrom').css('display', 'block').html('Please select correct date range.');
                    $('#errDateTo').hide();
                    flag = false;
                }
                else {
                    $('#errDateFrom').hide();
                    $('#errDateTo').hide();
                }
            }
            else {

                $('#errDateFrom').hide();
                $('#errDateTo').hide();
            }
            if (flag == true) {
                $("#hdnType").val("data");
                $('form').submit();
            }
            else {

                return false;
            }

        });


        $("#export").click(function () {
            $("#hdnType").val("excel");          
            $("form").submit();
        });
       
    });

</script>
